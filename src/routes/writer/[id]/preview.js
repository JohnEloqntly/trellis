/* Compiled: /Users/johnparry/Desktop/trellisplatform/src/routes/writer/%5Bid%5D/%2Bpage.svelte */
/* generated by Svelte v4.2.20 */
import {
	SvelteComponent,
	add_render_callback,
	append,
	attr,
	check_outros,
	component_subscribe,
	create_bidirectional_transition,
	create_in_transition,
	destroy_each,
	detach,
	element,
	empty,
	ensure_array_like,
	group_outros,
	init,
	insert,
	listen,
	noop,
	run_all,
	safe_not_equal,
	select_option,
	select_value,
	set_data,
	set_input_value,
	space,
	src_url_equal,
	svg_element,
	text,
	transition_in,
	transition_out
} from "svelte/internal";

import "svelte/internal/disclose-version";
import { page } from "$app/stores";
import { onMount } from "svelte";
import { fade, slide } from "svelte/transition";
import { goto } from "$app/navigation";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[20] = list[i];
	child_ctx[22] = i;
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[23] = list[i];
	child_ctx[22] = i;
	return child_ctx;
}

function get_each_context_2(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[25] = list[i];
	return child_ctx;
}

function get_each_context_3(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[28] = list[i];
	return child_ctx;
}

// (733:0) {:else}
function create_else_block_2(ctx) {
	let div1;
	let div0;
	let h1;
	let t1;
	let button;
	let mounted;
	let dispose;

	return {
		c() {
			div1 = element("div");
			div0 = element("div");
			h1 = element("h1");
			h1.textContent = "Writer not found";
			t1 = space();
			button = element("button");
			button.textContent = "Return to Portal";
			attr(h1, "class", "text-2xl font-gt-walsheim-bold text-gray-900 mb-4");
			attr(button, "class", "bg-gradient-to-r from-primary-blue to-secondary-blue text-white font-gt-walsheim-bold px-6 py-3 rounded-xl hover:shadow-lg transition-all duration-300");
			attr(div0, "class", "text-center");
			attr(div1, "class", "min-h-screen bg-gray-50 flex items-center justify-center");
		},
		m(target, anchor) {
			insert(target, div1, anchor);
			append(div1, div0);
			append(div0, h1);
			append(div0, t1);
			append(div0, button);

			if (!mounted) {
				dispose = listen(button, "click", /*click_handler_1*/ ctx[13]);
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) {
				detach(div1);
			}

			mounted = false;
			dispose();
		}
	};
}

// (471:0) {#if mounted && writer}
function create_if_block_2(ctx) {
	let div41;
	let div40;
	let div0;
	let button0;
	let div0_intro;
	let t2;
	let div3;
	let div2;
	let div1;
	let t3;
	let h1;
	let t4_value = /*writer*/ ctx[0].name + "";
	let t4;
	let t5;
	let p0;
	let t6_value = /*writer*/ ctx[0].title + "";
	let t6;
	let div3_intro;
	let t7;
	let div4;
	let button1;
	let t9;
	let button2;
	let svg1;
	let path1;
	let svg1_fill_value;
	let t10;
	let span1;
	let t11_value = (/*isSaved*/ ctx[1] ? 'Saved' : 'Save') + "";
	let t11;
	let button2_class_value;
	let div4_intro;
	let t12;
	let t13;
	let div12;
	let div6;
	let t16;
	let div11;
	let div8;
	let h30;
	let t18;
	let div7;
	let t19_value = /*writer*/ ctx[0].yearsExperience + "";
	let t19;
	let t20;
	let t21;
	let p1;
	let t23;
	let div10;
	let h31;
	let t25;
	let div9;
	let t26_value = /*writer*/ ctx[0].successRate + "";
	let t26;
	let t27;
	let t28;
	let p2;
	let div12_intro;
	let t30;
	let div20;
	let div13;
	let div13_intro;
	let t34;
	let div19;
	let div19_intro;
	let t42;
	let div32;
	let div22;
	let t45;
	let p6;
	let t46;
	let t47_value = /*writer*/ ctx[0].name + "";
	let t47;
	let t48;
	let t49;
	let div31;
	let div32_intro;
	let t67;
	let div34;
	let h22;
	let t68;
	let t69_value = /*writer*/ ctx[0].name.split(' ')[1] + "";
	let t69;
	let t70;
	let div33;
	let div34_intro;
	let t71;
	let div35;
	let h23;
	let t73;
	let ul;
	let div35_intro;
	let t74;
	let div37;
	let h24;
	let t76;
	let div36;
	let div37_intro;
	let t77;
	let div39;
	let h25;
	let t79;
	let div38;
	let div39_intro;
	let mounted;
	let dispose;

	function select_block_type_1(ctx, dirty) {
		if (/*writer*/ ctx[0].avatar) return create_if_block_4;
		return create_else_block_1;
	}

	let current_block_type = select_block_type_1(ctx, -1);
	let if_block0 = current_block_type(ctx);
	let if_block1 = /*showSaveSuccess*/ ctx[3] && create_if_block_3(ctx);
	let each_value_3 = ensure_array_like(/*writer*/ ctx[0].fullBio.split('\n\n'));
	let each_blocks_3 = [];

	for (let i = 0; i < each_value_3.length; i += 1) {
		each_blocks_3[i] = create_each_block_3(get_each_context_3(ctx, each_value_3, i));
	}

	let each_value_2 = ensure_array_like(/*writer*/ ctx[0].credentials);
	let each_blocks_2 = [];

	for (let i = 0; i < each_value_2.length; i += 1) {
		each_blocks_2[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
	}

	let each_value_1 = ensure_array_like(/*writer*/ ctx[0].recentProjects);
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	let each_value = ensure_array_like(/*writer*/ ctx[0].testimonials);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			div41 = element("div");
			div40 = element("div");
			div0 = element("div");
			button0 = element("button");
			button0.innerHTML = `<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path></svg> <span class="font-medium">Back</span>`;
			t2 = space();
			div3 = element("div");
			div2 = element("div");
			div1 = element("div");
			if_block0.c();
			t3 = space();
			h1 = element("h1");
			t4 = text(t4_value);
			t5 = space();
			p0 = element("p");
			t6 = text(t6_value);
			t7 = space();
			div4 = element("div");
			button1 = element("button");
			button1.textContent = "Work with me";
			t9 = space();
			button2 = element("button");
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			t10 = space();
			span1 = element("span");
			t11 = text(t11_value);
			t12 = space();
			if (if_block1) if_block1.c();
			t13 = space();
			div12 = element("div");
			div6 = element("div");
			div6.innerHTML = `<div class="w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center mr-3"><svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg></div> <h2 class="text-2xl font-gt-walsheim-bold text-gray-900">Details</h2>`;
			t16 = space();
			div11 = element("div");
			div8 = element("div");
			h30 = element("h3");
			h30.textContent = "Years of Experience";
			t18 = space();
			div7 = element("div");
			t19 = text(t19_value);
			t20 = text(" years");
			t21 = space();
			p1 = element("p");
			p1.textContent = "Professional grant writing experience";
			t23 = space();
			div10 = element("div");
			h31 = element("h3");
			h31.textContent = "Success Rate";
			t25 = space();
			div9 = element("div");
			t26 = text(t26_value);
			t27 = text("%");
			t28 = space();
			p2 = element("p");
			p2.textContent = "Grant application success rate";
			t30 = space();
			div20 = element("div");
			div13 = element("div");
			div13.innerHTML = `<h3 class="text-xl font-gt-walsheim-bold text-gray-900 mb-4">Education</h3> <p class="text-gray-700">PhD in Computer Science, Stanford University</p>`;
			t34 = space();
			div19 = element("div");
			div19.innerHTML = `<h3 class="text-xl font-gt-walsheim-bold text-gray-900 mb-4">Previous Roles</h3> <div class="space-y-2"><div class="flex items-start space-x-2"><div class="w-2 h-2 bg-pink-500 rounded-full mt-2 flex-shrink-0"></div> <p class="text-gray-700">Director of Research at Cambridge University</p></div> <div class="flex items-start space-x-2"><div class="w-2 h-2 bg-pink-500 rounded-full mt-2 flex-shrink-0"></div> <p class="text-gray-700">Principal Investigator at Alan Turing Institute</p></div></div>`;
			t42 = space();
			div32 = element("div");
			div22 = element("div");
			div22.innerHTML = `<div class="w-8 h-8 bg-emerald-500 rounded-lg flex items-center justify-center mr-3"><svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path></svg></div> <h2 class="text-2xl font-gt-walsheim-bold text-gray-900">Supported Competitions</h2>`;
			t45 = space();
			p6 = element("p");
			t46 = text("Grant competitions ");
			t47 = text(t47_value);
			t48 = text(" has expertise in");
			t49 = space();
			div31 = element("div");
			div31.innerHTML = `<div class="border border-gray-200 rounded-xl p-6"><div class="flex items-start space-x-4 mb-4"><div class="w-10 h-10 bg-yellow-100 rounded-lg flex items-center justify-center flex-shrink-0"><svg class="w-5 h-5 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path></svg></div> <div class="flex-1"><h4 class="text-lg font-gt-walsheim-bold text-gray-900 mb-1">IUK Loan</h4> <p class="text-sm text-gray-600 mb-2">Innovate UK</p> <p class="text-gray-700 text-sm mb-3">Low-interest loans for innovation projects</p> <span class="inline-block bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs font-medium">Technology</span></div></div></div> <div class="border border-gray-200 rounded-xl p-6"><div class="flex items-start space-x-4 mb-4"><div class="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center flex-shrink-0"><svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path></svg></div> <div class="flex-1"><h4 class="text-lg font-gt-walsheim-bold text-gray-900 mb-1">SMART</h4> <p class="text-sm text-gray-600 mb-2">Innovate UK</p> <p class="text-gray-700 text-sm mb-3">Small Business Research Initiative</p> <span class="inline-block bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs font-medium">Research</span></div></div></div>`;
			t67 = space();
			div34 = element("div");
			h22 = element("h2");
			t68 = text("About ");
			t69 = text(t69_value);
			t70 = space();
			div33 = element("div");

			for (let i = 0; i < each_blocks_3.length; i += 1) {
				each_blocks_3[i].c();
			}

			t71 = space();
			div35 = element("div");
			h23 = element("h2");
			h23.textContent = "Credentials & Qualifications";
			t73 = space();
			ul = element("ul");

			for (let i = 0; i < each_blocks_2.length; i += 1) {
				each_blocks_2[i].c();
			}

			t74 = space();
			div37 = element("div");
			h24 = element("h2");
			h24.textContent = "Recent Project Successes";
			t76 = space();
			div36 = element("div");

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t77 = space();
			div39 = element("div");
			h25 = element("h2");
			h25.textContent = "Client Testimonials";
			t79 = space();
			div38 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			attr(button0, "class", "flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors duration-200");
			attr(div0, "class", "mb-8");
			attr(div1, "class", "w-32 h-32 rounded-full overflow-hidden border-4 border-white shadow-lg mx-auto");
			attr(div2, "class", "relative inline-block mb-6");
			attr(h1, "class", "text-4xl font-gt-walsheim-bold text-gray-900 mb-2");
			attr(p0, "class", "text-xl text-gray-500");
			attr(div3, "class", "bg-gray-100 rounded-3xl p-12 mb-8 text-center");
			attr(button1, "class", "bg-gradient-to-r from-pink-500 to-pink-600 text-white font-gt-walsheim-bold px-8 py-4 rounded-2xl hover:shadow-lg transition-all duration-300");
			attr(path1, "stroke-linecap", "round");
			attr(path1, "stroke-linejoin", "round");
			attr(path1, "stroke-width", "2");
			attr(path1, "d", "M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z");
			attr(svg1, "class", "w-5 h-5 transition-all duration-300");
			attr(svg1, "fill", svg1_fill_value = /*isSaved*/ ctx[1] ? "currentColor" : "none");
			attr(svg1, "stroke", "currentColor");
			attr(svg1, "viewBox", "0 0 24 24");
			attr(span1, "class", "transition-all duration-300");

			attr(button2, "class", button2_class_value = "bg-white border border-gray-200 text-gray-700 font-gt-walsheim-bold px-8 py-4 rounded-2xl hover:bg-gray-50 transition-all duration-300 flex items-center space-x-2 " + (/*isSaved*/ ctx[1]
			? 'bg-emerald-50 border-emerald-200 text-emerald-700 shadow-md'
			: ''));

			attr(div4, "class", "flex space-x-4 mb-8 justify-center");
			attr(div6, "class", "flex items-center mb-6");
			attr(h30, "class", "text-lg font-medium text-gray-900 mb-2");
			attr(div7, "class", "text-3xl font-gt-walsheim-bold text-emerald-600 mb-1");
			attr(p1, "class", "text-gray-500");
			attr(h31, "class", "text-lg font-medium text-gray-900 mb-2");
			attr(div9, "class", "text-3xl font-gt-walsheim-bold text-emerald-600 mb-1");
			attr(p2, "class", "text-gray-500");
			attr(div11, "class", "grid grid-cols-2 gap-8");
			attr(div12, "class", "bg-white rounded-2xl border border-gray-200 shadow-sm p-8 mb-6");
			attr(div13, "class", "bg-white rounded-2xl border border-gray-200 shadow-sm p-8");
			attr(div19, "class", "bg-white rounded-2xl border border-gray-200 shadow-sm p-8");
			attr(div20, "class", "grid grid-cols-2 gap-6 mb-6");
			attr(div22, "class", "flex items-center mb-6");
			attr(p6, "class", "text-gray-600 mb-8");
			attr(div31, "class", "grid grid-cols-2 gap-6");
			attr(div32, "class", "bg-white rounded-2xl border border-gray-200 shadow-sm p-8 mb-8");
			attr(h22, "class", "text-2xl font-gt-walsheim-bold text-gray-900 mb-6");
			attr(div33, "class", "prose prose-gray max-w-none");
			attr(div34, "class", "bg-white rounded-2xl border border-gray-200 shadow-sm p-8");
			attr(h23, "class", "text-2xl font-gt-walsheim-bold text-gray-900 mb-6");
			attr(ul, "class", "space-y-3");
			attr(div35, "class", "bg-white rounded-2xl border border-gray-200 shadow-sm p-8");
			attr(h24, "class", "text-2xl font-gt-walsheim-bold text-gray-900 mb-6");
			attr(div36, "class", "space-y-4");
			attr(div37, "class", "bg-white rounded-2xl border border-gray-200 shadow-sm p-8");
			attr(h25, "class", "text-2xl font-gt-walsheim-bold text-gray-900 mb-6");
			attr(div38, "class", "space-y-6");
			attr(div39, "class", "bg-white rounded-2xl border border-gray-200 shadow-sm p-8");
			attr(div40, "class", "max-w-4xl mx-auto p-6 lg:p-8");
			attr(div41, "class", "min-h-screen bg-gray-50");
		},
		m(target, anchor) {
			insert(target, div41, anchor);
			append(div41, div40);
			append(div40, div0);
			append(div0, button0);
			append(div40, t2);
			append(div40, div3);
			append(div3, div2);
			append(div2, div1);
			if_block0.m(div1, null);
			append(div3, t3);
			append(div3, h1);
			append(h1, t4);
			append(div3, t5);
			append(div3, p0);
			append(p0, t6);
			append(div40, t7);
			append(div40, div4);
			append(div4, button1);
			append(div4, t9);
			append(div4, button2);
			append(button2, svg1);
			append(svg1, path1);
			append(button2, t10);
			append(button2, span1);
			append(span1, t11);
			append(div40, t12);
			if (if_block1) if_block1.m(div40, null);
			append(div40, t13);
			append(div40, div12);
			append(div12, div6);
			append(div12, t16);
			append(div12, div11);
			append(div11, div8);
			append(div8, h30);
			append(div8, t18);
			append(div8, div7);
			append(div7, t19);
			append(div7, t20);
			append(div8, t21);
			append(div8, p1);
			append(div11, t23);
			append(div11, div10);
			append(div10, h31);
			append(div10, t25);
			append(div10, div9);
			append(div9, t26);
			append(div9, t27);
			append(div10, t28);
			append(div10, p2);
			append(div40, t30);
			append(div40, div20);
			append(div20, div13);
			append(div20, t34);
			append(div20, div19);
			append(div40, t42);
			append(div40, div32);
			append(div32, div22);
			append(div32, t45);
			append(div32, p6);
			append(p6, t46);
			append(p6, t47);
			append(p6, t48);
			append(div32, t49);
			append(div32, div31);
			append(div40, t67);
			append(div40, div34);
			append(div34, h22);
			append(h22, t68);
			append(h22, t69);
			append(div34, t70);
			append(div34, div33);

			for (let i = 0; i < each_blocks_3.length; i += 1) {
				if (each_blocks_3[i]) {
					each_blocks_3[i].m(div33, null);
				}
			}

			append(div40, t71);
			append(div40, div35);
			append(div35, h23);
			append(div35, t73);
			append(div35, ul);

			for (let i = 0; i < each_blocks_2.length; i += 1) {
				if (each_blocks_2[i]) {
					each_blocks_2[i].m(ul, null);
				}
			}

			append(div40, t74);
			append(div40, div37);
			append(div37, h24);
			append(div37, t76);
			append(div37, div36);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				if (each_blocks_1[i]) {
					each_blocks_1[i].m(div36, null);
				}
			}

			append(div40, t77);
			append(div40, div39);
			append(div39, h25);
			append(div39, t79);
			append(div39, div38);

			for (let i = 0; i < each_blocks.length; i += 1) {
				if (each_blocks[i]) {
					each_blocks[i].m(div38, null);
				}
			}

			if (!mounted) {
				dispose = [
					listen(button0, "click", /*click_handler*/ ctx[12]),
					listen(button1, "click", /*openContactModal*/ ctx[8]),
					listen(button2, "click", /*toggleSave*/ ctx[11])
				];

				mounted = true;
			}
		},
		p(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type_1(ctx, dirty)) && if_block0) {
				if_block0.p(ctx, dirty);
			} else {
				if_block0.d(1);
				if_block0 = current_block_type(ctx);

				if (if_block0) {
					if_block0.c();
					if_block0.m(div1, null);
				}
			}

			if (dirty & /*writer*/ 1 && t4_value !== (t4_value = /*writer*/ ctx[0].name + "")) set_data(t4, t4_value);
			if (dirty & /*writer*/ 1 && t6_value !== (t6_value = /*writer*/ ctx[0].title + "")) set_data(t6, t6_value);

			if (dirty & /*isSaved*/ 2 && svg1_fill_value !== (svg1_fill_value = /*isSaved*/ ctx[1] ? "currentColor" : "none")) {
				attr(svg1, "fill", svg1_fill_value);
			}

			if (dirty & /*isSaved*/ 2 && t11_value !== (t11_value = (/*isSaved*/ ctx[1] ? 'Saved' : 'Save') + "")) set_data(t11, t11_value);

			if (dirty & /*isSaved*/ 2 && button2_class_value !== (button2_class_value = "bg-white border border-gray-200 text-gray-700 font-gt-walsheim-bold px-8 py-4 rounded-2xl hover:bg-gray-50 transition-all duration-300 flex items-center space-x-2 " + (/*isSaved*/ ctx[1]
			? 'bg-emerald-50 border-emerald-200 text-emerald-700 shadow-md'
			: ''))) {
				attr(button2, "class", button2_class_value);
			}

			if (/*showSaveSuccess*/ ctx[3]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*showSaveSuccess*/ 8) {
						transition_in(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_3(ctx);
					if_block1.c();
					transition_in(if_block1, 1);
					if_block1.m(div40, t13);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (dirty & /*writer*/ 1 && t19_value !== (t19_value = /*writer*/ ctx[0].yearsExperience + "")) set_data(t19, t19_value);
			if (dirty & /*writer*/ 1 && t26_value !== (t26_value = /*writer*/ ctx[0].successRate + "")) set_data(t26, t26_value);
			if (dirty & /*writer*/ 1 && t47_value !== (t47_value = /*writer*/ ctx[0].name + "")) set_data(t47, t47_value);
			if (dirty & /*writer*/ 1 && t69_value !== (t69_value = /*writer*/ ctx[0].name.split(' ')[1] + "")) set_data(t69, t69_value);

			if (dirty & /*writer*/ 1) {
				each_value_3 = ensure_array_like(/*writer*/ ctx[0].fullBio.split('\n\n'));
				let i;

				for (i = 0; i < each_value_3.length; i += 1) {
					const child_ctx = get_each_context_3(ctx, each_value_3, i);

					if (each_blocks_3[i]) {
						each_blocks_3[i].p(child_ctx, dirty);
					} else {
						each_blocks_3[i] = create_each_block_3(child_ctx);
						each_blocks_3[i].c();
						each_blocks_3[i].m(div33, null);
					}
				}

				for (; i < each_blocks_3.length; i += 1) {
					each_blocks_3[i].d(1);
				}

				each_blocks_3.length = each_value_3.length;
			}

			if (dirty & /*writer*/ 1) {
				each_value_2 = ensure_array_like(/*writer*/ ctx[0].credentials);
				let i;

				for (i = 0; i < each_value_2.length; i += 1) {
					const child_ctx = get_each_context_2(ctx, each_value_2, i);

					if (each_blocks_2[i]) {
						each_blocks_2[i].p(child_ctx, dirty);
					} else {
						each_blocks_2[i] = create_each_block_2(child_ctx);
						each_blocks_2[i].c();
						each_blocks_2[i].m(ul, null);
					}
				}

				for (; i < each_blocks_2.length; i += 1) {
					each_blocks_2[i].d(1);
				}

				each_blocks_2.length = each_value_2.length;
			}

			if (dirty & /*writer*/ 1) {
				each_value_1 = ensure_array_like(/*writer*/ ctx[0].recentProjects);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
					} else {
						each_blocks_1[i] = create_each_block_1(child_ctx);
						each_blocks_1[i].c();
						each_blocks_1[i].m(div36, null);
					}
				}

				for (; i < each_blocks_1.length; i += 1) {
					each_blocks_1[i].d(1);
				}

				each_blocks_1.length = each_value_1.length;
			}

			if (dirty & /*writer*/ 1) {
				each_value = ensure_array_like(/*writer*/ ctx[0].testimonials);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div38, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i(local) {
			if (local) {
				if (!div0_intro) {
					add_render_callback(() => {
						div0_intro = create_in_transition(div0, fade, { duration: 300 });
						div0_intro.start();
					});
				}
			}

			if (local) {
				if (!div3_intro) {
					add_render_callback(() => {
						div3_intro = create_in_transition(div3, fade, { duration: 500, delay: 100 });
						div3_intro.start();
					});
				}
			}

			if (local) {
				if (!div4_intro) {
					add_render_callback(() => {
						div4_intro = create_in_transition(div4, slide, { duration: 500, delay: 150 });
						div4_intro.start();
					});
				}
			}

			transition_in(if_block1);

			if (local) {
				if (!div12_intro) {
					add_render_callback(() => {
						div12_intro = create_in_transition(div12, slide, { duration: 500, delay: 200 });
						div12_intro.start();
					});
				}
			}

			if (local) {
				if (!div13_intro) {
					add_render_callback(() => {
						div13_intro = create_in_transition(div13, slide, { duration: 500, delay: 300 });
						div13_intro.start();
					});
				}
			}

			if (local) {
				if (!div19_intro) {
					add_render_callback(() => {
						div19_intro = create_in_transition(div19, slide, { duration: 500, delay: 350 });
						div19_intro.start();
					});
				}
			}

			if (local) {
				if (!div32_intro) {
					add_render_callback(() => {
						div32_intro = create_in_transition(div32, slide, { duration: 500, delay: 500 });
						div32_intro.start();
					});
				}
			}

			if (local) {
				if (!div34_intro) {
					add_render_callback(() => {
						div34_intro = create_in_transition(div34, slide, { duration: 500, delay: 200 });
						div34_intro.start();
					});
				}
			}

			if (local) {
				if (!div35_intro) {
					add_render_callback(() => {
						div35_intro = create_in_transition(div35, slide, { duration: 500, delay: 300 });
						div35_intro.start();
					});
				}
			}

			if (local) {
				if (!div37_intro) {
					add_render_callback(() => {
						div37_intro = create_in_transition(div37, slide, { duration: 500, delay: 400 });
						div37_intro.start();
					});
				}
			}

			if (local) {
				if (!div39_intro) {
					add_render_callback(() => {
						div39_intro = create_in_transition(div39, slide, { duration: 500, delay: 500 });
						div39_intro.start();
					});
				}
			}
		},
		o: noop,
		d(detaching) {
			if (detaching) {
				detach(div41);
			}

			if_block0.d();
			if (if_block1) if_block1.d();
			destroy_each(each_blocks_3, detaching);
			destroy_each(each_blocks_2, detaching);
			destroy_each(each_blocks_1, detaching);
			destroy_each(each_blocks, detaching);
			mounted = false;
			run_all(dispose);
		}
	};
}

// (512:12) {:else}
function create_else_block_1(ctx) {
	let div;
	let span;
	let t_value = getInitials(/*writer*/ ctx[0].name) + "";
	let t;

	return {
		c() {
			div = element("div");
			span = element("span");
			t = text(t_value);
			attr(span, "class", "text-white font-gt-walsheim-bold text-2xl");
			attr(div, "class", "w-full h-full bg-gradient-to-br from-primary-blue to-secondary-blue flex items-center justify-center");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, span);
			append(span, t);
		},
		p(ctx, dirty) {
			if (dirty & /*writer*/ 1 && t_value !== (t_value = getInitials(/*writer*/ ctx[0].name) + "")) set_data(t, t_value);
		},
		d(detaching) {
			if (detaching) {
				detach(div);
			}
		}
	};
}

// (503:12) {#if writer.avatar}
function create_if_block_4(ctx) {
	let img;
	let img_src_value;
	let img_alt_value;
	let mounted;
	let dispose;

	return {
		c() {
			img = element("img");
			if (!src_url_equal(img.src, img_src_value = /*writer*/ ctx[0].avatar)) attr(img, "src", img_src_value);
			attr(img, "alt", img_alt_value = /*writer*/ ctx[0].name);
			attr(img, "class", "w-full h-full object-cover");
		},
		m(target, anchor) {
			insert(target, img, anchor);

			if (!mounted) {
				dispose = listen(img, "error", error_handler);
				mounted = true;
			}
		},
		p(ctx, dirty) {
			if (dirty & /*writer*/ 1 && !src_url_equal(img.src, img_src_value = /*writer*/ ctx[0].avatar)) {
				attr(img, "src", img_src_value);
			}

			if (dirty & /*writer*/ 1 && img_alt_value !== (img_alt_value = /*writer*/ ctx[0].name)) {
				attr(img, "alt", img_alt_value);
			}
		},
		d(detaching) {
			if (detaching) {
				detach(img);
			}

			mounted = false;
			dispose();
		}
	};
}

// (544:6) {#if showSaveSuccess}
function create_if_block_3(ctx) {
	let div3;
	let div2;
	let div0;
	let t0;
	let div1;
	let p0;
	let t2;
	let p1;
	let t3;
	let t4_value = /*writer*/ ctx[0].name + "";
	let t4;
	let t5;
	let div3_intro;

	return {
		c() {
			div3 = element("div");
			div2 = element("div");
			div0 = element("div");
			div0.innerHTML = `<svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>`;
			t0 = space();
			div1 = element("div");
			p0 = element("p");
			p0.textContent = "Writer saved!";
			t2 = space();
			p1 = element("p");
			t3 = text("You can find ");
			t4 = text(t4_value);
			t5 = text(" in your saved writers in the portal.");
			attr(div0, "class", "w-8 h-8 bg-emerald-500 rounded-full flex items-center justify-center");
			attr(p0, "class", "text-sm font-medium text-emerald-900");
			attr(p1, "class", "text-sm text-emerald-700");
			attr(div2, "class", "flex items-center space-x-3");
			attr(div3, "class", "mb-8 p-4 bg-emerald-50 rounded-xl border border-emerald-100 max-w-md mx-auto");
		},
		m(target, anchor) {
			insert(target, div3, anchor);
			append(div3, div2);
			append(div2, div0);
			append(div2, t0);
			append(div2, div1);
			append(div1, p0);
			append(div1, t2);
			append(div1, p1);
			append(p1, t3);
			append(p1, t4);
			append(p1, t5);
		},
		p(ctx, dirty) {
			if (dirty & /*writer*/ 1 && t4_value !== (t4_value = /*writer*/ ctx[0].name + "")) set_data(t4, t4_value);
		},
		i(local) {
			if (local) {
				if (!div3_intro) {
					add_render_callback(() => {
						div3_intro = create_in_transition(div3, slide, { duration: 300 });
						div3_intro.start();
					});
				}
			}
		},
		o: noop,
		d(detaching) {
			if (detaching) {
				detach(div3);
			}
		}
	};
}

// (670:14) {#each writer.fullBio.split('\n\n') as paragraph}
function create_each_block_3(ctx) {
	let p;
	let t_value = /*paragraph*/ ctx[28] + "";
	let t;

	return {
		c() {
			p = element("p");
			t = text(t_value);
			attr(p, "class", "text-gray-700 leading-relaxed mb-4");
		},
		m(target, anchor) {
			insert(target, p, anchor);
			append(p, t);
		},
		p(ctx, dirty) {
			if (dirty & /*writer*/ 1 && t_value !== (t_value = /*paragraph*/ ctx[28] + "")) set_data(t, t_value);
		},
		d(detaching) {
			if (detaching) {
				detach(p);
			}
		}
	};
}

// (680:14) {#each writer.credentials as credential}
function create_each_block_2(ctx) {
	let li;
	let div;
	let t0;
	let span;
	let t1_value = /*credential*/ ctx[25] + "";
	let t1;
	let t2;

	return {
		c() {
			li = element("li");
			div = element("div");
			div.innerHTML = `<svg class="w-4 h-4 text-blue-600" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path></svg>`;
			t0 = space();
			span = element("span");
			t1 = text(t1_value);
			t2 = space();
			attr(div, "class", "w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0");
			attr(span, "class", "text-gray-700");
			attr(li, "class", "flex items-center space-x-3");
		},
		m(target, anchor) {
			insert(target, li, anchor);
			append(li, div);
			append(li, t0);
			append(li, span);
			append(span, t1);
			append(li, t2);
		},
		p(ctx, dirty) {
			if (dirty & /*writer*/ 1 && t1_value !== (t1_value = /*credential*/ ctx[25] + "")) set_data(t1, t1_value);
		},
		d(detaching) {
			if (detaching) {
				detach(li);
			}
		}
	};
}

// (697:14) {#each writer.recentProjects as project, index}
function create_each_block_1(ctx) {
	let div2;
	let div0;
	let h3;
	let t0_value = /*project*/ ctx[23].title + "";
	let t0;
	let t1;
	let span0;
	let t2_value = /*project*/ ctx[23].amount + "";
	let t2;
	let t3;
	let div1;
	let span1;
	let t4_value = /*project*/ ctx[23].funder + "";
	let t4;
	let t5;
	let span2;
	let t7;
	let span3;
	let t8_value = /*project*/ ctx[23].outcome + "";
	let t8;
	let t9;

	return {
		c() {
			div2 = element("div");
			div0 = element("div");
			h3 = element("h3");
			t0 = text(t0_value);
			t1 = space();
			span0 = element("span");
			t2 = text(t2_value);
			t3 = space();
			div1 = element("div");
			span1 = element("span");
			t4 = text(t4_value);
			t5 = space();
			span2 = element("span");
			span2.textContent = "•";
			t7 = space();
			span3 = element("span");
			t8 = text(t8_value);
			t9 = space();
			attr(h3, "class", "text-lg font-gt-walsheim-bold text-gray-900");
			attr(span0, "class", "text-lg font-gt-walsheim-bold text-emerald-600");
			attr(div0, "class", "flex items-start justify-between mb-3");
			attr(span1, "class", "font-medium");
			attr(span3, "class", "text-emerald-600 font-medium");
			attr(div1, "class", "flex items-center space-x-4 text-sm text-gray-600 mb-3");
			attr(div2, "class", "border border-gray-200 rounded-xl p-6");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div0);
			append(div0, h3);
			append(h3, t0);
			append(div0, t1);
			append(div0, span0);
			append(span0, t2);
			append(div2, t3);
			append(div2, div1);
			append(div1, span1);
			append(span1, t4);
			append(div1, t5);
			append(div1, span2);
			append(div1, t7);
			append(div1, span3);
			append(span3, t8);
			append(div2, t9);
		},
		p(ctx, dirty) {
			if (dirty & /*writer*/ 1 && t0_value !== (t0_value = /*project*/ ctx[23].title + "")) set_data(t0, t0_value);
			if (dirty & /*writer*/ 1 && t2_value !== (t2_value = /*project*/ ctx[23].amount + "")) set_data(t2, t2_value);
			if (dirty & /*writer*/ 1 && t4_value !== (t4_value = /*project*/ ctx[23].funder + "")) set_data(t4, t4_value);
			if (dirty & /*writer*/ 1 && t8_value !== (t8_value = /*project*/ ctx[23].outcome + "")) set_data(t8, t8_value);
		},
		d(detaching) {
			if (detaching) {
				detach(div2);
			}
		}
	};
}

// (717:14) {#each writer.testimonials as testimonial, index}
function create_each_block(ctx) {
	let div1;
	let blockquote;
	let t0;
	let t1_value = /*testimonial*/ ctx[20].text + "";
	let t1;
	let t2;
	let t3;
	let div0;
	let p0;
	let t4_value = /*testimonial*/ ctx[20].author + "";
	let t4;
	let t5;
	let p1;
	let t6_value = /*testimonial*/ ctx[20].company + "";
	let t6;
	let t7;

	return {
		c() {
			div1 = element("div");
			blockquote = element("blockquote");
			t0 = text("\"");
			t1 = text(t1_value);
			t2 = text("\"");
			t3 = space();
			div0 = element("div");
			p0 = element("p");
			t4 = text(t4_value);
			t5 = space();
			p1 = element("p");
			t6 = text(t6_value);
			t7 = space();
			attr(blockquote, "class", "text-gray-700 leading-relaxed mb-4 italic");
			attr(p0, "class", "font-gt-walsheim-bold text-gray-900");
			attr(p1, "class", "text-gray-600");
			attr(div0, "class", "text-sm");
			attr(div1, "class", "bg-gray-50 rounded-xl p-6 border border-gray-100");
		},
		m(target, anchor) {
			insert(target, div1, anchor);
			append(div1, blockquote);
			append(blockquote, t0);
			append(blockquote, t1);
			append(blockquote, t2);
			append(div1, t3);
			append(div1, div0);
			append(div0, p0);
			append(p0, t4);
			append(div0, t5);
			append(div0, p1);
			append(p1, t6);
			append(div1, t7);
		},
		p(ctx, dirty) {
			if (dirty & /*writer*/ 1 && t1_value !== (t1_value = /*testimonial*/ ctx[20].text + "")) set_data(t1, t1_value);
			if (dirty & /*writer*/ 1 && t4_value !== (t4_value = /*testimonial*/ ctx[20].author + "")) set_data(t4, t4_value);
			if (dirty & /*writer*/ 1 && t6_value !== (t6_value = /*testimonial*/ ctx[20].company + "")) set_data(t6, t6_value);
		},
		d(detaching) {
			if (detaching) {
				detach(div1);
			}
		}
	};
}

// (748:0) {#if showContactModal}
function create_if_block(ctx) {
	let div1;
	let div0;
	let current_block_type_index;
	let if_block;
	let div0_transition;
	let div1_transition;
	let current;
	const if_block_creators = [create_if_block_1, create_else_block];
	const if_blocks = [];

	function select_block_type_2(ctx, dirty) {
		if (!/*showContactSuccess*/ ctx[5]) return 0;
		return 1;
	}

	current_block_type_index = select_block_type_2(ctx, -1);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	return {
		c() {
			div1 = element("div");
			div0 = element("div");
			if_block.c();
			attr(div0, "class", "bg-white rounded-2xl max-w-md w-full max-h-[90vh] overflow-y-auto");
			attr(div1, "class", "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50");
		},
		m(target, anchor) {
			insert(target, div1, anchor);
			append(div1, div0);
			if_blocks[current_block_type_index].m(div0, null);
			current = true;
		},
		p(ctx, dirty) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type_2(ctx, dirty);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				check_outros();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				} else {
					if_block.p(ctx, dirty);
				}

				transition_in(if_block, 1);
				if_block.m(div0, null);
			}
		},
		i(local) {
			if (current) return;
			transition_in(if_block);

			if (local) {
				add_render_callback(() => {
					if (!current) return;
					if (!div0_transition) div0_transition = create_bidirectional_transition(div0, slide, { duration: 300 }, true);
					div0_transition.run(1);
				});
			}

			if (local) {
				add_render_callback(() => {
					if (!current) return;
					if (!div1_transition) div1_transition = create_bidirectional_transition(div1, fade, { duration: 200 }, true);
					div1_transition.run(1);
				});
			}

			current = true;
		},
		o(local) {
			transition_out(if_block);

			if (local) {
				if (!div0_transition) div0_transition = create_bidirectional_transition(div0, slide, { duration: 300 }, false);
				div0_transition.run(0);
			}

			if (local) {
				if (!div1_transition) div1_transition = create_bidirectional_transition(div1, fade, { duration: 200 }, false);
				div1_transition.run(0);
			}

			current = false;
		},
		d(detaching) {
			if (detaching) {
				detach(div1);
			}

			if_blocks[current_block_type_index].d();
			if (detaching && div0_transition) div0_transition.end();
			if (detaching && div1_transition) div1_transition.end();
		}
	};
}

// (848:6) {:else}
function create_else_block(ctx) {
	let div2;
	let div0;
	let t0;
	let h3;
	let t2;
	let p;
	let t3;
	let t4_value = /*writer*/ ctx[0].name + "";
	let t4;
	let t5;
	let t6;
	let div1;
	let h4;
	let t8;
	let ul;
	let li0;
	let t9;
	let t10_value = /*writer*/ ctx[0].name + "";
	let t10;
	let t11;
	let t12;
	let li1;
	let t14;
	let li2;
	let t16;
	let button;
	let div2_transition;
	let current;
	let mounted;
	let dispose;

	return {
		c() {
			div2 = element("div");
			div0 = element("div");
			div0.innerHTML = `<svg class="w-8 h-8 text-emerald-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>`;
			t0 = space();
			h3 = element("h3");
			h3.textContent = "Message Sent!";
			t2 = space();
			p = element("p");
			t3 = text("Thank you for reaching out. ");
			t4 = text(t4_value);
			t5 = text(" will get back to you within 24 hours.");
			t6 = space();
			div1 = element("div");
			h4 = element("h4");
			h4.textContent = "What happens next?";
			t8 = space();
			ul = element("ul");
			li0 = element("li");
			t9 = text("• ");
			t10 = text(t10_value);
			t11 = text(" will review your project details");
			t12 = space();
			li1 = element("li");
			li1.textContent = "• You'll receive a personalized proposal";
			t14 = space();
			li2 = element("li");
			li2.textContent = "• Schedule a consultation call if interested";
			t16 = space();
			button = element("button");
			button.textContent = "Done";
			attr(div0, "class", "w-16 h-16 bg-emerald-100 rounded-full flex items-center justify-center mx-auto mb-6");
			attr(h3, "class", "text-2xl font-gt-walsheim-bold text-gray-900 mb-3");
			attr(p, "class", "text-gray-600 mb-6");
			attr(h4, "class", "text-sm font-medium text-gray-900 mb-2");
			attr(ul, "class", "text-sm text-gray-600 space-y-1");
			attr(div1, "class", "bg-gray-50 rounded-xl p-4 mb-6");
			attr(button, "class", "bg-gradient-to-r from-primary-blue to-secondary-blue text-white font-gt-walsheim-bold px-8 py-3 rounded-xl hover:shadow-lg transition-all duration-200");
			attr(div2, "class", "p-8 text-center");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div0);
			append(div2, t0);
			append(div2, h3);
			append(div2, t2);
			append(div2, p);
			append(p, t3);
			append(p, t4);
			append(p, t5);
			append(div2, t6);
			append(div2, div1);
			append(div1, h4);
			append(div1, t8);
			append(div1, ul);
			append(ul, li0);
			append(li0, t9);
			append(li0, t10);
			append(li0, t11);
			append(ul, t12);
			append(ul, li1);
			append(ul, t14);
			append(ul, li2);
			append(div2, t16);
			append(div2, button);
			current = true;

			if (!mounted) {
				dispose = listen(button, "click", /*closeContactModal*/ ctx[9]);
				mounted = true;
			}
		},
		p(ctx, dirty) {
			if ((!current || dirty & /*writer*/ 1) && t4_value !== (t4_value = /*writer*/ ctx[0].name + "")) set_data(t4, t4_value);
			if ((!current || dirty & /*writer*/ 1) && t10_value !== (t10_value = /*writer*/ ctx[0].name + "")) set_data(t10, t10_value);
		},
		i(local) {
			if (current) return;

			if (local) {
				add_render_callback(() => {
					if (!current) return;
					if (!div2_transition) div2_transition = create_bidirectional_transition(div2, fade, { duration: 300 }, true);
					div2_transition.run(1);
				});
			}

			current = true;
		},
		o(local) {
			if (local) {
				if (!div2_transition) div2_transition = create_bidirectional_transition(div2, fade, { duration: 300 }, false);
				div2_transition.run(0);
			}

			current = false;
		},
		d(detaching) {
			if (detaching) {
				detach(div2);
			}

			if (detaching && div2_transition) div2_transition.end();
			mounted = false;
			dispose();
		}
	};
}

// (751:6) {#if !showContactSuccess}
function create_if_block_1(ctx) {
	let div8;
	let div0;
	let h3;
	let t0;
	let t1_value = /*writer*/ ctx[0].name + "";
	let t1;
	let t2;
	let button0;
	let t3;
	let div6;
	let div1;
	let label0;
	let t5;
	let input0;
	let t6;
	let div2;
	let label1;
	let t8;
	let input1;
	let t9;
	let div3;
	let label2;
	let t11;
	let input2;
	let t12;
	let div4;
	let label3;
	let t14;
	let select;
	let option0;
	let option1;
	let option2;
	let option3;
	let option4;
	let option5;
	let option6;
	let option7;
	let option8;
	let option9;
	let t25;
	let div5;
	let label4;
	let t27;
	let textarea;
	let t28;
	let div7;
	let button1;
	let t30;
	let button2;
	let t31;
	let button2_disabled_value;
	let mounted;
	let dispose;

	return {
		c() {
			div8 = element("div");
			div0 = element("div");
			h3 = element("h3");
			t0 = text("Contact ");
			t1 = text(t1_value);
			t2 = space();
			button0 = element("button");
			button0.innerHTML = `<svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>`;
			t3 = space();
			div6 = element("div");
			div1 = element("div");
			label0 = element("label");
			label0.textContent = "Your Name *";
			t5 = space();
			input0 = element("input");
			t6 = space();
			div2 = element("div");
			label1 = element("label");
			label1.textContent = "Email Address *";
			t8 = space();
			input1 = element("input");
			t9 = space();
			div3 = element("div");
			label2 = element("label");
			label2.textContent = "Company";
			t11 = space();
			input2 = element("input");
			t12 = space();
			div4 = element("div");
			label3 = element("label");
			label3.textContent = "Competition We Need Support On";
			t14 = space();
			select = element("select");
			option0 = element("option");
			option0.textContent = "Select a competition...";
			option1 = element("option");
			option1.textContent = "Innovate UK Smart Grants";
			option2 = element("option");
			option2.textContent = "EPSRC Impact Acceleration";
			option3 = element("option");
			option3.textContent = "Wellcome Trust Innovator Awards";
			option4 = element("option");
			option4.textContent = "UKRI Future Leaders Fellowship";
			option5 = element("option");
			option5.textContent = "Clean Growth Fund";
			option6 = element("option");
			option6.textContent = "Digital Health Technology Catalyst";
			option7 = element("option");
			option7.textContent = "Space Technology Demonstrator";
			option8 = element("option");
			option8.textContent = "AI for Good Challenge";
			option9 = element("option");
			option9.textContent = "Other - please specify in message";
			t25 = space();
			div5 = element("div");
			label4 = element("label");
			label4.textContent = "Message *";
			t27 = space();
			textarea = element("textarea");
			t28 = space();
			div7 = element("div");
			button1 = element("button");
			button1.textContent = "Cancel";
			t30 = space();
			button2 = element("button");
			t31 = text("Send Message");
			attr(h3, "class", "text-2xl font-gt-walsheim-bold text-gray-900");
			attr(button0, "class", "w-8 h-8 rounded-full bg-gray-100 hover:bg-gray-200 flex items-center justify-center transition-colors duration-200");
			attr(div0, "class", "flex items-center justify-between mb-6");
			attr(label0, "for", "contactName");
			attr(label0, "class", "block text-sm font-medium text-gray-700 mb-2");
			attr(input0, "id", "contactName");
			attr(input0, "type", "text");
			attr(input0, "placeholder", "Enter your full name");
			attr(input0, "class", "w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-blue focus:border-transparent transition-all duration-200 text-gray-900 placeholder-gray-500");
			attr(label1, "for", "contactEmail");
			attr(label1, "class", "block text-sm font-medium text-gray-700 mb-2");
			attr(input1, "id", "contactEmail");
			attr(input1, "type", "email");
			attr(input1, "placeholder", "your.email@company.com");
			attr(input1, "class", "w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-blue focus:border-transparent transition-all duration-200 text-gray-900 placeholder-gray-500");
			attr(label2, "for", "contactCompany");
			attr(label2, "class", "block text-sm font-medium text-gray-700 mb-2");
			attr(input2, "id", "contactCompany");
			attr(input2, "type", "text");
			attr(input2, "placeholder", "Your company name");
			attr(input2, "class", "w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-blue focus:border-transparent transition-all duration-200 text-gray-900 placeholder-gray-500");
			attr(label3, "for", "competitionSupport");
			attr(label3, "class", "block text-sm font-medium text-gray-700 mb-2");
			option0.__value = "";
			set_input_value(option0, option0.__value);
			option1.__value = "innovate-uk-smart";
			set_input_value(option1, option1.__value);
			option2.__value = "epsrc-impact";
			set_input_value(option2, option2.__value);
			option3.__value = "wellcome-innovator";
			set_input_value(option3, option3.__value);
			option4.__value = "ukri-future-leaders";
			set_input_value(option4, option4.__value);
			option5.__value = "clean-growth";
			set_input_value(option5, option5.__value);
			option6.__value = "digital-health";
			set_input_value(option6, option6.__value);
			option7.__value = "space-tech";
			set_input_value(option7, option7.__value);
			option8.__value = "ai-for-good";
			set_input_value(option8, option8.__value);
			option9.__value = "other";
			set_input_value(option9, option9.__value);
			attr(select, "id", "competitionSupport");
			attr(select, "class", "w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-blue focus:border-transparent transition-all duration-200 text-gray-900");
			if (/*contactForm*/ ctx[6].competition === void 0) add_render_callback(() => /*select_change_handler*/ ctx[17].call(select));
			attr(label4, "for", "contactMessage");
			attr(label4, "class", "block text-sm font-medium text-gray-700 mb-2");
			attr(textarea, "id", "contactMessage");
			attr(textarea, "placeholder", "Tell us about your project and funding needs...");
			attr(textarea, "rows", "4");
			attr(textarea, "class", "w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-blue focus:border-transparent transition-all duration-200 resize-none text-gray-900 placeholder-gray-500");
			attr(div6, "class", "space-y-4");
			attr(button1, "class", "flex-1 px-6 py-3 border border-gray-300 text-gray-700 font-gt-walsheim-bold rounded-xl hover:bg-gray-50 transition-all duration-200");
			button2.disabled = button2_disabled_value = !/*contactForm*/ ctx[6].name || !/*contactForm*/ ctx[6].email || !/*contactForm*/ ctx[6].message;
			attr(button2, "class", "flex-1 px-6 py-3 bg-gradient-to-r from-primary-blue to-secondary-blue text-white font-gt-walsheim-bold rounded-xl hover:shadow-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed");
			attr(div7, "class", "flex space-x-3 mt-8");
			attr(div8, "class", "p-8");
		},
		m(target, anchor) {
			insert(target, div8, anchor);
			append(div8, div0);
			append(div0, h3);
			append(h3, t0);
			append(h3, t1);
			append(div0, t2);
			append(div0, button0);
			append(div8, t3);
			append(div8, div6);
			append(div6, div1);
			append(div1, label0);
			append(div1, t5);
			append(div1, input0);
			set_input_value(input0, /*contactForm*/ ctx[6].name);
			append(div6, t6);
			append(div6, div2);
			append(div2, label1);
			append(div2, t8);
			append(div2, input1);
			set_input_value(input1, /*contactForm*/ ctx[6].email);
			append(div6, t9);
			append(div6, div3);
			append(div3, label2);
			append(div3, t11);
			append(div3, input2);
			set_input_value(input2, /*contactForm*/ ctx[6].company);
			append(div6, t12);
			append(div6, div4);
			append(div4, label3);
			append(div4, t14);
			append(div4, select);
			append(select, option0);
			append(select, option1);
			append(select, option2);
			append(select, option3);
			append(select, option4);
			append(select, option5);
			append(select, option6);
			append(select, option7);
			append(select, option8);
			append(select, option9);
			select_option(select, /*contactForm*/ ctx[6].competition, true);
			append(div6, t25);
			append(div6, div5);
			append(div5, label4);
			append(div5, t27);
			append(div5, textarea);
			set_input_value(textarea, /*contactForm*/ ctx[6].message);
			append(div8, t28);
			append(div8, div7);
			append(div7, button1);
			append(div7, t30);
			append(div7, button2);
			append(button2, t31);

			if (!mounted) {
				dispose = [
					listen(button0, "click", /*closeContactModal*/ ctx[9]),
					listen(input0, "input", /*input0_input_handler*/ ctx[14]),
					listen(input1, "input", /*input1_input_handler*/ ctx[15]),
					listen(input2, "input", /*input2_input_handler*/ ctx[16]),
					listen(select, "change", /*select_change_handler*/ ctx[17]),
					listen(textarea, "input", /*textarea_input_handler*/ ctx[18]),
					listen(button1, "click", /*closeContactModal*/ ctx[9]),
					listen(button2, "click", /*submitContactForm*/ ctx[10])
				];

				mounted = true;
			}
		},
		p(ctx, dirty) {
			if (dirty & /*writer*/ 1 && t1_value !== (t1_value = /*writer*/ ctx[0].name + "")) set_data(t1, t1_value);

			if (dirty & /*contactForm*/ 64 && input0.value !== /*contactForm*/ ctx[6].name) {
				set_input_value(input0, /*contactForm*/ ctx[6].name);
			}

			if (dirty & /*contactForm*/ 64 && input1.value !== /*contactForm*/ ctx[6].email) {
				set_input_value(input1, /*contactForm*/ ctx[6].email);
			}

			if (dirty & /*contactForm*/ 64 && input2.value !== /*contactForm*/ ctx[6].company) {
				set_input_value(input2, /*contactForm*/ ctx[6].company);
			}

			if (dirty & /*contactForm*/ 64) {
				select_option(select, /*contactForm*/ ctx[6].competition);
			}

			if (dirty & /*contactForm*/ 64) {
				set_input_value(textarea, /*contactForm*/ ctx[6].message);
			}

			if (dirty & /*contactForm*/ 64 && button2_disabled_value !== (button2_disabled_value = !/*contactForm*/ ctx[6].name || !/*contactForm*/ ctx[6].email || !/*contactForm*/ ctx[6].message)) {
				button2.disabled = button2_disabled_value;
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) {
				detach(div8);
			}

			mounted = false;
			run_all(dispose);
		}
	};
}

function create_fragment(ctx) {
	let title_value;
	let meta;
	let t0;
	let t1;
	let if_block1_anchor;

	document.title = title_value = "" + ((/*writer*/ ctx[0]
	? /*writer*/ ctx[0].name
	: 'Writer Profile') + " - Trellis");

	function select_block_type(ctx, dirty) {
		if (/*mounted*/ ctx[2] && /*writer*/ ctx[0]) return create_if_block_2;
		return create_else_block_2;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block0 = current_block_type(ctx);
	let if_block1 = /*showContactModal*/ ctx[4] && create_if_block(ctx);

	return {
		c() {
			meta = element("meta");
			t0 = space();
			if_block0.c();
			t1 = space();
			if (if_block1) if_block1.c();
			if_block1_anchor = empty();
			attr(meta, "name", "description");
			attr(meta, "content", "Expert grant writer profile and credentials");
		},
		m(target, anchor) {
			append(document.head, meta);
			insert(target, t0, anchor);
			if_block0.m(target, anchor);
			insert(target, t1, anchor);
			if (if_block1) if_block1.m(target, anchor);
			insert(target, if_block1_anchor, anchor);
		},
		p(ctx, [dirty]) {
			if (dirty & /*writer*/ 1 && title_value !== (title_value = "" + ((/*writer*/ ctx[0]
			? /*writer*/ ctx[0].name
			: 'Writer Profile') + " - Trellis"))) {
				document.title = title_value;
			}

			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block0) {
				if_block0.p(ctx, dirty);
			} else {
				if_block0.d(1);
				if_block0 = current_block_type(ctx);

				if (if_block0) {
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(t1.parentNode, t1);
				}
			}

			if (/*showContactModal*/ ctx[4]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*showContactModal*/ 16) {
						transition_in(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					transition_in(if_block1, 1);
					if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
				}
			} else if (if_block1) {
				group_outros();

				transition_out(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				check_outros();
			}
		},
		i(local) {
			transition_in(if_block0);
			transition_in(if_block1);
		},
		o(local) {
			transition_out(if_block1);
		},
		d(detaching) {
			if (detaching) {
				detach(t0);
				detach(t1);
				detach(if_block1_anchor);
			}

			detach(meta);
			if_block0.d(detaching);
			if (if_block1) if_block1.d(detaching);
		}
	};
}

function getInitials(name) {
	return name.split(" ").map(n => n[0]).join("");
}

function formatCurrency(amount) {
	return amount.replace(/(\d+)([KM])/, (match, num, suffix) => {
		return `\xA3${num}${suffix === "M" ? " million" : " thousand"}`;
	});
}

const error_handler = () => {
	
}; // Handle image load error by hiding image and showing placeholder

function instance($$self, $$props, $$invalidate) {
	let $page;
	component_subscribe($$self, page, $$value => $$invalidate(7, $page = $$value));
	let writer = null;
	let isSaved = false;
	let mounted = false;
	let showSaveSuccess = false;
	let showContactModal = false;
	let showContactSuccess = false;

	let contactForm = {
		name: "",
		email: "",
		company: "",
		message: "",
		competition: ""
	};

	function openContactModal() {
		$$invalidate(4, showContactModal = true);
	}

	function closeContactModal() {
		$$invalidate(4, showContactModal = false);
		$$invalidate(5, showContactSuccess = false);

		$$invalidate(6, contactForm = {
			name: "",
			email: "",
			company: "",
			message: "",
			competition: ""
		});
	}

	function submitContactForm() {
		if (!contactForm.name || !contactForm.email || !contactForm.message) {
			return;
		}

		$$invalidate(5, showContactSuccess = true);

		setTimeout(
			() => {
				closeContactModal();
			},
			3e3
		);
	}

	const writers = [
		{
			id: 1,
			name: "Dr. Sarah Johnson",
			title: "Senior Grant Consultant",
			sector: "Healthcare",
			successRate: 89,
			avatar: "/avatars/Dr. Sarah Johnson.jpg",
			totalFunding: "15.2M",
			yearsExperience: 12,
			specialties: ["Medical Research", "Clinical Trials", "Health Innovation"],
			bio: "Sarah has over a decade of experience securing funding for groundbreaking healthcare research. She has successfully obtained grants totaling over \xA315M for medical research projects.",
			fullBio: `Dr. Sarah Johnson brings over 12 years of experience in healthcare research funding and grant writing. As a Senior Grant Consultant, she has an intimate understanding of medical research funding landscapes and regulatory requirements.

Sarah has successfully secured over \xA315.2M in funding for healthcare research projects, medical studies, and health innovation initiatives. Her expertise spans across various funding bodies including Innovate UK, NIHR, Wellcome Trust, and Medical Research Council funding programs.

Key achievements include leading the funding strategy for breakthrough medical research that has led to significant healthcare improvements and new treatment protocols. Sarah's approach combines deep scientific understanding with strategic commercial insight.`,
			credentials: [
				"PhD in Biomedical Sciences, University of Oxford",
				"MSc Medical Research, Imperial College London",
				"Former Grant Manager at NHS Innovation Hub",
				"Certified Grant Writing Professional (GWP)",
				"Research Coordinator at Imperial College London"
			],
			recentProjects: [
				{
					title: "Novel Cancer Treatment Research",
					funder: "Medical Research Council",
					amount: "\xA32.8M",
					outcome: "Breakthrough discovery - Phase II trials approved"
				},
				{
					title: "Digital Health Intervention Study",
					funder: "NIHR",
					amount: "\xA31.1M",
					outcome: "Successful outcomes published in Nature Medicine"
				},
				{
					title: "Clinical Trial Infrastructure",
					funder: "Wellcome Trust",
					amount: "\xA31.5M",
					outcome: "Platform deployed across 20 NHS trusts"
				}
			],
			testimonials: [
				{
					text: "Sarah's expertise was instrumental in securing our MRC grant. Her deep understanding of medical research requirements made all the difference.",
					author: "Prof. David Chen, Principal Investigator",
					company: "University College London"
				},
				{
					text: "Working with Sarah transformed our approach to healthcare funding. She brings both scientific rigor and strategic thinking.",
					author: "Dr. Rebecca Mitchell, Research Director",
					company: "Medical Innovation Institute"
				}
			],
			contact: {
				email: "sarah.johnson@trellis.com",
				phone: "+44 7700 900 120",
				linkedin: "https://linkedin.com/in/sarahjohnson-grants"
			},
			availability: "Available for new projects",
			hourlyRate: "\xA3180/hour",
			projectRate: "\xA32,200 - \xA312,000"
		},
		{
			id: 2,
			name: "Prof. Michael Chen",
			title: "Research Funding Specialist",
			sector: "Technology",
			successRate: 92,
			avatar: "/avatars/Prof. Michael Chen.jpg",
			totalFunding: "23.8M",
			yearsExperience: 15,
			specialties: ["AI & Machine Learning", "Quantum Computing", "Robotics"],
			bio: "Michael is a leading expert in technology funding with a track record of securing major grants for cutting-edge research in AI and quantum technologies.",
			fullBio: `Prof. Michael Chen is a distinguished technology funding strategist with 15 years of experience in securing funding for advanced technology innovations. His expertise spans artificial intelligence, quantum computing, robotics, and emerging technologies.

Michael has successfully secured over \xA323.8M in funding across various technology sectors, working with research institutions, tech startups, and scale-ups. His deep understanding of technology commercialization pathways has made him a sought-after advisor for complex innovation projects.

His approach focuses on translating complex technical innovations into compelling funding narratives that resonate with both technical reviewers and commercial stakeholders. Michael has particular strength in international funding programs and cross-border collaborations.`,
			credentials: [
				"PhD in Computer Science, Stanford University",
				"MSc Quantum Information, University of Oxford",
				"Director of Research at Cambridge University",
				"Principal Investigator at Alan Turing Institute",
				"Fellow, Royal Academy of Engineering"
			],
			recentProjects: [
				{
					title: "Quantum Computing Platform",
					funder: "UKRI/EPSRC",
					amount: "\xA34.8M",
					outcome: "Multi-year program - breakthrough achieved"
				},
				{
					title: "AI Safety Research Initiative",
					funder: "Horizon Europe",
					amount: "\u20AC3.2M",
					outcome: "Leading consortium of 8 countries"
				},
				{
					title: "Advanced Materials Discovery",
					funder: "Innovate UK",
					amount: "\xA31.9M",
					outcome: "3 patents filed, commercial pilot launched"
				}
			],
			testimonials: [
				{
					text: "Michael has an exceptional ability to translate complex technical concepts into compelling funding proposals. His strategic insights are invaluable.",
					author: "Dr. Lisa Chen, Founder",
					company: "QuantumCore Technologies"
				},
				{
					text: "The depth of Michael's understanding across multiple funding landscapes is remarkable. He secured funding we didn't think was possible.",
					author: "Prof. Alan Thompson, Director",
					company: "Advanced AI Research Lab"
				}
			],
			contact: {
				email: "michael.chen@trellis.com",
				phone: "+44 7700 900 121",
				linkedin: "https://linkedin.com/in/michaelchen-tech"
			},
			availability: "Limited availability - booking 3 months ahead",
			hourlyRate: "\xA3225/hour",
			projectRate: "\xA35,000 - \xA325,000"
		},
		{
			id: 3,
			name: "Dr. Emma Williams",
			title: "Grant Writing Expert",
			sector: "Environmental",
			successRate: 85,
			avatar: "/avatars/Dr. Emma Williams.jpg",
			totalFunding: "8.7M",
			yearsExperience: 8,
			specialties: ["Climate Change", "Renewable Energy", "Sustainability"],
			bio: "Emma specializes in environmental and sustainability research funding, with expertise in climate science and renewable energy projects.",
			fullBio: `Dr. Emma Williams is a dedicated environmental grant writing expert with 8 years of experience in securing funding for climate change and sustainability initiatives. Her expertise spans renewable energy, environmental science, and sustainable development projects.

Emma has successfully secured over \xA38.7M in funding for environmental research, clean energy projects, and sustainability initiatives. Her deep understanding of environmental challenges and funding landscapes has made her a trusted advisor for green technology companies and research institutions.

Her approach combines environmental science expertise with strategic funding knowledge, enabling her to craft compelling proposals that address both technical merit and environmental impact. Emma is particularly skilled at international climate funding programs.`,
			credentials: [
				"PhD in Environmental Science, University of Cambridge",
				"MSc Renewable Energy, Imperial College London",
				"Environmental Scientist at Met Office",
				"Research Fellow at University of Edinburgh",
				"Certified Sustainability Professional (CSP)"
			],
			recentProjects: [
				{
					title: "Renewable Energy Storage System",
					funder: "Innovate UK",
					amount: "\xA31.2M",
					outcome: "Prototype developed - patent pending"
				},
				{
					title: "Climate Impact Assessment Tool",
					funder: "NERC",
					amount: "\xA3890K",
					outcome: "Deployed by 12 local authorities"
				},
				{
					title: "Sustainable Agriculture Initiative",
					funder: "Horizon Europe",
					amount: "\u20AC1.5M",
					outcome: "Field trials showing 30% efficiency gain"
				}
			],
			testimonials: [
				{
					text: "Emma's deep understanding of environmental funding helped us secure crucial NERC funding. Her expertise in climate science funding is unmatched.",
					author: "Prof. David Green, Research Director",
					company: "Climate Research Institute"
				},
				{
					text: "Working with Emma was transformative for our clean energy startup. She understands both the science and the funding landscape.",
					author: "Dr. Sarah Wilson, CEO",
					company: "GreenTech Innovations"
				}
			],
			contact: {
				email: "emma.williams@trellis.com",
				phone: "+44 7700 900 122",
				linkedin: "https://linkedin.com/in/emmawilliams-environment"
			},
			availability: "Available for new projects",
			hourlyRate: "\xA3165/hour",
			projectRate: "\xA32,000 - \xA310,000"
		},
		{
			id: 4,
			name: "Dr. James Rodriguez",
			title: "Funding Strategy Director",
			sector: "Education",
			successRate: 94,
			avatar: "/avatars/Dr. James Rodriguez.jpg",
			totalFunding: "31.5M",
			yearsExperience: 18,
			specialties: ["Educational Innovation", "Digital Learning", "Social Mobility"],
			bio: "James has led funding strategies for transformative educational research, securing over \xA331M for projects that advance learning and social mobility.",
			fullBio: `Dr. James Rodriguez is a distinguished funding strategy director with 18 years of experience in securing funding for educational innovation and social mobility projects. His expertise spans educational technology, learning sciences, and policy research.

James has successfully secured over \xA331.5M in funding for educational initiatives, working with universities, education technology companies, and policy institutes. His deep understanding of educational funding landscapes and policy requirements has made him a sought-after strategist for complex educational projects.

His approach focuses on translating educational research into compelling funding narratives that demonstrate clear impact on learning outcomes and social mobility. James has particular expertise in large-scale educational transformation projects.`,
			credentials: [
				"PhD in Education Policy, Harvard University",
				"MSc Educational Psychology, Oxford University",
				"Head of Research at Department for Education",
				"Professor at London School of Economics",
				"Fellow, Academy of Social Sciences"
			],
			recentProjects: [
				{
					title: "AI-Enhanced Learning Platform",
					funder: "Department for Education",
					amount: "\xA35.2M",
					outcome: "Deployed across 500 schools nationwide"
				},
				{
					title: "Social Mobility Research Initiative",
					funder: "ESRC",
					amount: "\xA32.8M",
					outcome: "Policy recommendations adopted by government"
				},
				{
					title: "Digital Literacy Program",
					funder: "Horizon Europe",
					amount: "\u20AC3.1M",
					outcome: "Reaching 50,000+ students across Europe"
				}
			],
			testimonials: [
				{
					text: "James's strategic approach to educational funding is exceptional. He secured funding that transformed our entire research program.",
					author: "Prof. Maria Gonzalez, Dean",
					company: "Institute of Education"
				},
				{
					text: "Working with James opened doors we didn't know existed. His understanding of education policy funding is unparalleled.",
					author: "Dr. Robert Chen, Director",
					company: "EdTech Research Center"
				}
			],
			contact: {
				email: "james.rodriguez@trellis.com",
				phone: "+44 7700 900 123",
				linkedin: "https://linkedin.com/in/jamesrodriguez-education"
			},
			availability: "Limited availability - booking 2 months ahead",
			hourlyRate: "\xA3210/hour",
			projectRate: "\xA34,000 - \xA320,000"
		},
		{
			id: 5,
			name: "Dr. Lisa Thompson",
			title: "Research Grant Advisor",
			sector: "Social Sciences",
			successRate: 87,
			avatar: "/avatars/Dr. Lisa Thompson.jpg",
			totalFunding: "12.3M",
			yearsExperience: 10,
			specialties: ["Psychology", "Sociology", "Public Policy"],
			bio: "Lisa brings deep expertise in social sciences research funding, with a focus on projects that drive positive social change and inform public policy.",
			fullBio: `Dr. Lisa Thompson is an accomplished research grant advisor with 10 years of experience in securing funding for social sciences research. Her expertise spans psychology, sociology, public policy research, and social innovation projects.

Lisa has successfully secured over \xA312.3M in funding for social sciences initiatives, working with universities, think tanks, and policy research organizations. Her understanding of social research methodologies and funding requirements has made her a trusted advisor for complex social science projects.

Her approach combines rigorous research methodology with strategic policy relevance, enabling her to craft proposals that demonstrate both academic excellence and real-world impact. Lisa is particularly skilled at interdisciplinary social science funding.`,
			credentials: [
				"PhD in Social Psychology, University of Oxford",
				"MSc Research Methods, London School of Economics",
				"Senior Researcher at Institute for Fiscal Studies",
				"Policy Advisor at Cabinet Office",
				"Fellow, British Psychological Society"
			],
			recentProjects: [
				{
					title: "Social Cohesion Research Program",
					funder: "ESRC",
					amount: "\xA31.8M",
					outcome: "Findings influenced government community policy"
				},
				{
					title: "Mental Health Innovation Study",
					funder: "NIHR",
					amount: "\xA31.2M",
					outcome: "New intervention adopted by NHS trusts"
				},
				{
					title: "Digital Exclusion Research",
					funder: "Nuffield Foundation",
					amount: "\xA3650K",
					outcome: "Policy recommendations implemented"
				}
			],
			testimonials: [
				{
					text: "Lisa's expertise in social sciences funding helped us secure crucial ESRC funding. Her understanding of policy impact is exceptional.",
					author: "Prof. Andrew Wilson, Research Director",
					company: "Social Policy Institute"
				},
				{
					text: "Working with Lisa transformed our approach to social research funding. She brings both academic rigor and policy insight.",
					author: "Dr. Jennifer Adams, Principal Investigator",
					company: "Community Research Centre"
				}
			],
			contact: {
				email: "lisa.thompson@trellis.com",
				phone: "+44 7700 900 124",
				linkedin: "https://linkedin.com/in/lisathompson-social"
			},
			availability: "Available for new projects",
			hourlyRate: "\xA3175/hour",
			projectRate: "\xA32,500 - \xA312,000"
		},
		{
			id: 6,
			name: "Dr. Robert Kumar",
			title: "Innovation Grant Specialist",
			sector: "Engineering",
			successRate: 91,
			avatar: "/avatars/Dr. Robert Kumar.jpg",
			totalFunding: "19.6M",
			yearsExperience: 14,
			specialties: ["Aerospace", "Manufacturing", "Materials Science"],
			bio: "Robert has extensive experience in engineering research funding, particularly in aerospace and advanced manufacturing technologies.",
			fullBio: `Dr. Robert Kumar is a distinguished innovation grant specialist with 14 years of experience in securing funding for engineering and advanced manufacturing projects. His expertise spans aerospace engineering, materials science, and manufacturing innovation.

Robert has successfully secured over \xA319.6M in funding for engineering initiatives, working with aerospace companies, manufacturing firms, and research institutions. His deep understanding of engineering challenges and funding landscapes has made him a sought-after advisor for complex technical projects.

His approach combines technical expertise with commercial understanding, enabling him to craft proposals that demonstrate both engineering excellence and market potential. Robert is particularly skilled at international engineering collaboration funding.`,
			credentials: [
				"PhD in Aerospace Engineering, MIT",
				"MSc Materials Science, Imperial College London",
				"Principal Engineer at Rolls-Royce",
				"Research Director at Cranfield University",
				"Fellow, Royal Aeronautical Society"
			],
			recentProjects: [
				{
					title: "Advanced Jet Engine Materials",
					funder: "Aerospace Technology Institute",
					amount: "\xA33.2M",
					outcome: "New alloy in commercial production"
				},
				{
					title: "Smart Manufacturing Platform",
					funder: "Innovate UK",
					amount: "\xA32.1M",
					outcome: "Deployed across 25 manufacturing sites"
				},
				{
					title: "Sustainable Aviation Fuels",
					funder: "Horizon Europe",
					amount: "\u20AC2.8M",
					outcome: "Flight trials successfully completed"
				}
			],
			testimonials: [
				{
					text: "Robert's engineering expertise and funding knowledge helped us secure crucial ATI funding. His technical insight is invaluable.",
					author: "Dr. Sophie Chen, Chief Engineer",
					company: "Aerospace Innovations Ltd"
				},
				{
					text: "Working with Robert opened new funding opportunities we hadn't considered. His industry knowledge is exceptional.",
					author: "Prof. David Miller, Director",
					company: "Advanced Manufacturing Institute"
				}
			],
			contact: {
				email: "robert.kumar@trellis.com",
				phone: "+44 7700 900 125",
				linkedin: "https://linkedin.com/in/robertkumar-engineering"
			},
			availability: "Available for new projects",
			hourlyRate: "\xA3195/hour",
			projectRate: "\xA33,000 - \xA315,000"
		}
	];

	onMount(() => {
		$$invalidate(2, mounted = true);
		const writerId = parseInt($page.params.id);
		$$invalidate(0, writer = writers.find(w => w.id === writerId));

		if (!writer) {
			goto("/portal");
			return;
		}

		const savedWriters = JSON.parse(localStorage.getItem("savedWriters") || "[]");
		$$invalidate(1, isSaved = savedWriters.includes(writer.id));
	});

	function toggleSave() {
		if (!writer) return;
		const savedWriters = JSON.parse(localStorage.getItem("savedWriters") || "[]");

		if (isSaved) {
			const updated = savedWriters.filter(id => id !== writer.id);
			localStorage.setItem("savedWriters", JSON.stringify(updated));
			$$invalidate(1, isSaved = false);
		} else {
			savedWriters.push(writer.id);
			localStorage.setItem("savedWriters", JSON.stringify(savedWriters));
			$$invalidate(1, isSaved = true);
			$$invalidate(3, showSaveSuccess = true);

			setTimeout(
				() => {
					$$invalidate(3, showSaveSuccess = false);
				},
				3e3
			);
		}
	}

	const click_handler = () => {
		const fromSection = $page.url.searchParams.get('from');
		const competitionId = $page.url.searchParams.get('competitionId');

		if (fromSection === 'competition' && competitionId) {
			goto(`/competition/${competitionId}`);
		} else if (fromSection) {
			goto(`/portal?section=${fromSection}`);
		} else {
			history.back();
		}
	};

	const click_handler_1 = () => goto('/portal');

	function input0_input_handler() {
		contactForm.name = this.value;
		$$invalidate(6, contactForm);
	}

	function input1_input_handler() {
		contactForm.email = this.value;
		$$invalidate(6, contactForm);
	}

	function input2_input_handler() {
		contactForm.company = this.value;
		$$invalidate(6, contactForm);
	}

	function select_change_handler() {
		contactForm.competition = select_value(this);
		$$invalidate(6, contactForm);
	}

	function textarea_input_handler() {
		contactForm.message = this.value;
		$$invalidate(6, contactForm);
	}

	return [
		writer,
		isSaved,
		mounted,
		showSaveSuccess,
		showContactModal,
		showContactSuccess,
		contactForm,
		$page,
		openContactModal,
		closeContactModal,
		submitContactForm,
		toggleSave,
		click_handler,
		click_handler_1,
		input0_input_handler,
		input1_input_handler,
		input2_input_handler,
		select_change_handler,
		textarea_input_handler
	];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Component;